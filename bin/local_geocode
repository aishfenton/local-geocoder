#!/usr/bin/env ruby

require "local_geocoder"
require "trollop"
require "csv"

DEFAULT_TEMPLATE = '(?<lng>\-?\d+.?\d+)[,\t ]\s?(?<lat>\-?\d+.?\d+)'

opts = Trollop::options do
  version "local_geocode #{LocalGeocoder::VERSION}"
  banner <<-EOS
Local Geocoder
---------------
Reverse geocodes lng,lat pairs into Country codes (and State + County within the USA). Each line of Stdin is read and has lng,lat pairs extracted (see --template below for how) and the resulting reverse geocode is output to Stdout.

Usage:
  local_geocode [options] file

Example:
> echo "-122.4194155, 37.7749295" | local_geocode 
> United States of America (USA), California (CA), San Francisco
 
Options:
EOS
  opt 'template', "The regex used to parse lng,lat paris from the input stream", :default => DEFAULT_TEMPLATE, :short => :t
end

require "local_geocoder"

lc = LocalGeocoder::Geocoder.new
ARGF.each_line do |l|
  data = l.match(Regexp.new(opts["template"]))
  result = if data.nil?
    LocalGeocoder::Result.new
  else
    lng, lat = data[:lng].to_f, data[:lat].to_f 
    lc.reverse_geocode(lng, lat)
  end
  puts result.inspect

end
